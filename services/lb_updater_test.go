package services

import (
	"os"
	"path/filepath"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestLbUpdater(t *testing.T) {
	dirPath, err := os.MkdirTemp("", "nginx-lb-updater")
	assert.NoError(t, err)
	defer os.RemoveAll(dirPath)

	os.Setenv("CONF_FOLDER_PATH", dirPath)

	u, err := NewLBUpdater()
	assert.NoError(t, err)

	backendName := "namespace-a_myservice"
	lbPort := 9000
	lbProtocol := "tcp"
	upstreamServers := []Server{
		{
			Host: "192.168.101.2",
			Port: 5014,
		},
		{
			Host: "192.168.101.3",
			Port: 5014,
		},
	}
	proxyTimeoutSeconds := 5
	proxyConnectTimeoutSeconds := 2

	err = u.UpdateStream(backendName, lbPort, lbProtocol, upstreamServers, proxyTimeoutSeconds, proxyConnectTimeoutSeconds)
	assert.NoError(t, err)

	confData, err := os.ReadFile(filepath.Join(dirPath, backendName+".conf"))
	assert.NoError(t, err)

	expectedConf := `# generated by nginx-lb-updater, do not edit as changes can be overwritten
stream {
	upstream namespace-a_myservice {
		192.168.101.2:5014;
		192.168.101.3:5014;
	}

	server {
		listen        9000 ;
		proxy_pass    namespace-a_myservice;
		proxy_timeout 5s;
		proxy_connect_timeout 2s;
	}
}
`

	assert.Equal(t, expectedConf, string(confData))
}
